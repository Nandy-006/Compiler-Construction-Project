  LINE  LEXEME           TOKEN ID  TOKEN
------  -------------  ----------  -------------
     1  array                  11  KEYWD_ARRAY
     1  <                      46  SYM_LT
     1  flote                   7  KEYWD_FLOAT
     1  >                      45  SYM_GT
     1  IDENTIFIER             69  IDENTIFIER
     1  ;                      38  SYM_SEMICOLON
     3  if                      1  KEYWD_IF
     3  (                      34  SYM_OP_PAR
     3  IDENTIFIER             69  IDENTIFIER
     3  )                      35  SYM_CL_PAR
     3  {                      32  SYM_OP_CURLY
     4  let                    14  KEYWD_LET
     4  IDENTIFIER             69  IDENTIFIER
     4  =                      51  SYM_ASSIGN
     4  IDENTIFIER             69  IDENTIFIER
     4  ;                      38  SYM_SEMICOLON
     5  }                      33  SYM_CL_CURLY
     5  else                    2  KEYWD_ELSE
     5  {                      32  SYM_OP_CURLY
     6  let                    14  KEYWD_LET
     6  IDENTIFIER             69  IDENTIFIER
     6  =                      51  SYM_ASSIGN
     6  LITERAL_FLOAT          69  IDENTIFIER
     6  ;                      38  SYM_SEMICOLON
     7  }                      33  SYM_CL_CURLY
     9  whil                    0  KEYWD_WHILE
     9  (                      34  SYM_OP_PAR
     9  IDENTIFIER             69  IDENTIFIER
     9  >                      45  SYM_GT
     9  LITERAL_INT            69  IDENTIFIER
     9  )                      35  SYM_CL_PAR
     9  {                      32  SYM_OP_CURLY
    10  intijur                 6  KEYWD_INT
    10  IDENTIFIER             69  IDENTIFIER
    10  =                      51  SYM_ASSIGN
    10  LITERAL_INT            69  IDENTIFIER
    10  ;                      38  SYM_SEMICOLON
    11  let                    14  KEYWD_LET
    11  IDENTIFIER             69  IDENTIFIER
    11  [                      36  SYM_OP_BRACK
    11  LITERAL_INT            69  IDENTIFIER
    11  ]                      37  SYM_CL_BRACK
    11  =                      51  SYM_ASSIGN
    11  IDENTIFIER             69  IDENTIFIER
    11  +                      40  SYM_PLUS
    11  LITERAL_INT            69  IDENTIFIER
    11  *                      42  SYM_ASTERISK
    11  IDENTIFIER             69  IDENTIFIER
    11  ;                      38  SYM_SEMICOLON
    12  }                      33  SYM_CL_CURLY
    14  if                      1  KEYWD_IF
    14  (                      34  SYM_OP_PAR
    14  IDENTIFIER             69  IDENTIFIER
    14  ==                     49  SYM_ISEQ
    14  LITERAL_CHAR           69  IDENTIFIER
    14  &&                     53  SYM_AND
    14  IDENTIFIER             69  IDENTIFIER
    14  <=                     48  SYM_LTEQ
    14  LITERAL_INT            69  IDENTIFIER
    14  +                      40  SYM_PLUS
    14  IDENTIFIER             69  IDENTIFIER
    14  )                      35  SYM_CL_PAR
    14  {                      32  SYM_OP_CURLY
    15  array                  11  KEYWD_ARRAY
    15  <                      46  SYM_LT
    15  strin                   9  KEYWD_STRING
    15  >                      45  SYM_GT
    15  IDENTIFIER             69  IDENTIFIER
    15  ;                      38  SYM_SEMICOLON
    16  whil                    0  KEYWD_WHILE
    16  (                      34  SYM_OP_PAR
    16  IDENTIFIER             69  IDENTIFIER
    16  <                      46  SYM_LT
    16  LITERAL_INT            69  IDENTIFIER
    16  )                      35  SYM_CL_PAR
    16  {                      32  SYM_OP_CURLY
    17  if                      1  KEYWD_IF
    17  (                      34  SYM_OP_PAR
    17  IDENTIFIER             69  IDENTIFIER
    17  ==                     49  SYM_ISEQ
    17  LITERAL_INT            69  IDENTIFIER
    17  *                      42  SYM_ASTERISK
    17  IDENTIFIER             69  IDENTIFIER
    17  /                      43  SYM_SLASH
    17  2                      64  LITERAL_INT
    17  )                      35  SYM_CL_PAR
    17  {                      32  SYM_OP_CURLY
    18  let                    14  KEYWD_LET
    18  IDENTIFIER             69  IDENTIFIER
    18  [                      36  SYM_OP_BRACK
    18  LITERAL_INT            69  IDENTIFIER
    18  ]                      37  SYM_CL_BRACK
    18  =                      51  SYM_ASSIGN
    18  LITERAL_STRIN          69  IDENTIFIER
    18  ;                      38  SYM_SEMICOLON
    19  }                      33  SYM_CL_CURLY
    20  }                      33  SYM_CL_CURLY
    21  }                      33  SYM_CL_CURLY