  LINE  LEXEME      TOKEN ID  TOKEN
------  --------  ----------  -------------
     1  if                 1  KEYWD_IF
     1  (                 34  SYM_OP_PAR
     1  x                 69  IDENTIFIER
     1  %                 44  SYM_PERC
     1  10                64  LITERAL_INT
     1  ==                49  SYM_ISEQ
     1  5                 64  LITERAL_INT
     1  )                 35  SYM_CL_PAR
     1  {                 32  SYM_OP_CURLY
     2  let               14  KEYWD_LET
     2  x                 69  IDENTIFIER
     2  =                 51  SYM_ASSIGN
     2  x                 69  IDENTIFIER
     2  /                 43  SYM_SLASH
     2  5                 64  LITERAL_INT
     2  ;                 38  SYM_SEMICOLON
     3  }                 33  SYM_CL_CURLY
     3  else               2  KEYWD_ELSE
     3  {                 32  SYM_OP_CURLY
     4  let               14  KEYWD_LET
     4  x                 69  IDENTIFIER
     4  =                 51  SYM_ASSIGN
     4  x                 69  IDENTIFIER
     4  -                 41  SYM_MINUS
     4  2                 64  LITERAL_INT
     4  ;                 38  SYM_SEMICOLON
     5  let               14  KEYWD_LET
     5  b                 69  IDENTIFIER
     5  =                 51  SYM_ASSIGN
     5  stonks             3  KEYWD_TRUE
     5  ;                 38  SYM_SEMICOLON
     6  }                 33  SYM_CL_CURLY
     8  if                 1  KEYWD_IF
     8  (                 34  SYM_OP_PAR
     8  b                 69  IDENTIFIER
     8  !=                50  SYM_NOTEQ
     8  (                 34  SYM_OP_PAR
     8  x                 69  IDENTIFIER
     8  <=                48  SYM_LTEQ
     8  25                64  LITERAL_INT
     8  +                 40  SYM_PLUS
     8  (                 34  SYM_OP_PAR
     8  x                 69  IDENTIFIER
     8  /                 43  SYM_SLASH
     8  15                64  LITERAL_INT
     8  )                 35  SYM_CL_PAR
     8  )                 35  SYM_CL_PAR
     8  )                 35  SYM_CL_PAR
     8  {                 32  SYM_OP_CURLY
     9  let               14  KEYWD_LET
     9  a                 69  IDENTIFIER
     9  =                 51  SYM_ASSIGN
     9  (                 34  SYM_OP_PAR
     9  b                 69  IDENTIFIER
     9  *                 42  SYM_ASTERISK
     9  10                64  LITERAL_INT
     9  )                 35  SYM_CL_PAR
     9  +                 40  SYM_PLUS
     9  (                 34  SYM_OP_PAR
     9  x                 69  IDENTIFIER
     9  *                 42  SYM_ASTERISK
     9  10                64  LITERAL_INT
     9  )                 35  SYM_CL_PAR
     9  /                 43  SYM_SLASH
     9  4                 64  LITERAL_INT
     9  ;                 38  SYM_SEMICOLON
    10  }                 33  SYM_CL_CURLY
    10  else               2  KEYWD_ELSE
    10  {                 32  SYM_OP_CURLY
    11  if                 1  KEYWD_IF
    11  (                 34  SYM_OP_PAR
    11  c                 69  IDENTIFIER
    11  ==                49  SYM_ISEQ
    11  7.5               65  LITERAL_FLOAT
    11  )                 35  SYM_CL_PAR
    11  {                 32  SYM_OP_CURLY
    12  let               14  KEYWD_LET
    12  a                 69  IDENTIFIER
    12  =                 51  SYM_ASSIGN
    12  b                 69  IDENTIFIER
    12  *                 42  SYM_ASTERISK
    12  2.5               65  LITERAL_FLOAT
    12  ;                 38  SYM_SEMICOLON
    13  }                 33  SYM_CL_CURLY
    14  }                 33  SYM_CL_CURLY