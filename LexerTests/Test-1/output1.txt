filepath: ./LexerTests/Test-1/input1.lwj
LINE    LEXEME                  TOKEN ID    TOKEN           

1       /                       43          SYM_SLASH       
1       *                       42          SYM_ASTERISK    
1       A                       69          IDENTIFIER      
1       program                 69          IDENTIFIER      
1       to                      69          IDENTIFIER      
1       compute                 69          IDENTIFIER      
1       factorials              69          IDENTIFIER      
1       *                       42          SYM_ASTERISK    
1       /                       43          SYM_SLASH       
2       funkshun                10          KEYWD_FUNCTION  
2       intijur                 6           KEYWD_INT       
2       fact                    69          IDENTIFIER      
2       (                       34          SYM_OP_PAR      
2       intijur                 6           KEYWD_INT       
2       n                       69          IDENTIFIER      
2       )                       35          SYM_CL_PAR      
2       {                       32          SYM_OP_CURLY    
3       if                      1           KEYWD_IF        
3       (                       34          SYM_OP_PAR      
3       n                       69          IDENTIFIER      
3       <=                      48          SYM_LTEQ        
3       1                       64          LITERAL_INT     
3       )                       35          SYM_CL_PAR      
4       retun                   5           KEYWD_RETURN    
4       1                       64          LITERAL_INT     
4       ;                       38          SYM_SEMICOLON   
5       else                    2           KEYWD_ELSE      
6       retun                   5           KEYWD_RETURN    
6       n                       69          IDENTIFIER      
6       *                       42          SYM_ASTERISK    
6       coll                    12          KEYWD_CALL      
6       fact                    69          IDENTIFIER      
6       (                       34          SYM_OP_PAR      
6       n                       69          IDENTIFIER      
6       -                       41          SYM_MINUS       
6       1                       64          LITERAL_INT     
6       )                       35          SYM_CL_PAR      
6       ;                       38          SYM_SEMICOLON   
7       }                       33          SYM_CL_CURLY    
9       funkshun                10          KEYWD_FUNCTION  
9       intijur                 6           KEYWD_INT       
9       main                    69          IDENTIFIER      
9       (                       34          SYM_OP_PAR      
9       void                    69          IDENTIFIER      
9       )                       35          SYM_CL_PAR      
9       {                       32          SYM_OP_CURLY    
10      intijur                 6           KEYWD_INT       
10      x                       69          IDENTIFIER      
10      ;                       38          SYM_SEMICOLON   
11      let                     14          KEYWD_LET       
11      x                       69          IDENTIFIER      
11      =                       51          SYM_ASSIGN      
11      1                       64          LITERAL_INT     
11      ;                       38          SYM_SEMICOLON   
12      whil                    0           KEYWD_WHILE     
12      (                       34          SYM_OP_PAR      
12      x                       69          IDENTIFIER      
12      <=                      48          SYM_LTEQ        
12      10                      64          LITERAL_INT     
12      )                       35          SYM_CL_PAR      
12      {                       32          SYM_OP_CURLY    
13      coll                    12          KEYWD_CALL      
13      write                   69          IDENTIFIER      
13      (                       34          SYM_OP_PAR      
13      x                       69          IDENTIFIER      
13      )                       35          SYM_CL_PAR      
13      ;                       38          SYM_SEMICOLON   
14      coll                    12          KEYWD_CALL      
14      write                   69          IDENTIFIER      
14      (                       34          SYM_OP_PAR      
14      coll                    12          KEYWD_CALL      
14      fact                    69          IDENTIFIER      
14      (                       34          SYM_OP_PAR      
14      x                       69          IDENTIFIER      
14      )                       35          SYM_CL_PAR      
14      )                       35          SYM_CL_PAR      
14      ;                       38          SYM_SEMICOLON   
15      coll                    12          KEYWD_CALL      
15      writeln                 69          IDENTIFIER      
15      (                       34          SYM_OP_PAR      
15      )                       35          SYM_CL_PAR      
15      ;                       38          SYM_SEMICOLON   
16      x                       69          IDENTIFIER      
16      =                       51          SYM_ASSIGN      
16      x                       69          IDENTIFIER      
16      +                       40          SYM_PLUS        
16      1                       64          LITERAL_INT     
16      ;                       38          SYM_SEMICOLON   
17      }                       33          SYM_CL_CURLY    
18      retun                   5           KEYWD_RETURN    
18      0                       64          LITERAL_INT     
18      ;                       38          SYM_SEMICOLON   
19      }                       33          SYM_CL_CURLY    
