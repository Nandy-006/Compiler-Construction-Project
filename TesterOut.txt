filepath: ./LexerTests/Test-1/input1.lwj
LINE    LEXEME                  TOKEN ID    TOKEN           

1       /                       43          SYM_SLASH       
1       *                       42          SYM_ASTERISK    
1       A                       69          IDENTIFIER      
1       program                 69          IDENTIFIER      
1       to                      69          IDENTIFIER      
1       compute                 69          IDENTIFIER      
1       factorials              69          IDENTIFIER      
1       *                       42          SYM_ASTERISK    
1       /                       43          SYM_SLASH       
2       funkshun                10          KEYWD_FUNCTION  
2       intijur                 6           KEYWD_INT       
2       fact                    69          IDENTIFIER      
2       (                       34          SYM_OP_PAR      
2       intijur                 6           KEYWD_INT       
2       n                       69          IDENTIFIER      
2       )                       35          SYM_CL_PAR      
2       {                       32          SYM_OP_CURLY    
3       if                      1           KEYWD_IF        
3       (                       34          SYM_OP_PAR      
3       n                       69          IDENTIFIER      
3       <=                      48          SYM_LTEQ        
3       1                       64          LITERAL_INT     
3       )                       35          SYM_CL_PAR      
4       retun                   5           KEYWD_RETURN    
4       1                       64          LITERAL_INT     
4       ;                       38          SYM_SEMICOLON   
5       else                    2           KEYWD_ELSE      
6       retun                   5           KEYWD_RETURN    
6       n                       69          IDENTIFIER      
6       *                       42          SYM_ASTERISK    
6       coll                    12          KEYWD_CALL      
6       fact                    69          IDENTIFIER      
6       (                       34          SYM_OP_PAR      
6       n                       69          IDENTIFIER      
6       -                       41          SYM_MINUS       
6       1                       64          LITERAL_INT     
6       )                       35          SYM_CL_PAR      
6       ;                       38          SYM_SEMICOLON   
7       }                       33          SYM_CL_CURLY    
9       funkshun                10          KEYWD_FUNCTION  
9       intijur                 6           KEYWD_INT       
9       main                    69          IDENTIFIER      
9       (                       34          SYM_OP_PAR      
9       void                    69          IDENTIFIER      
9       )                       35          SYM_CL_PAR      
9       {                       32          SYM_OP_CURLY    
10      intijur                 6           KEYWD_INT       
10      x                       69          IDENTIFIER      
10      ;                       38          SYM_SEMICOLON   
11      let                     14          KEYWD_LET       
11      x                       69          IDENTIFIER      
11      =                       51          SYM_ASSIGN      
11      1                       64          LITERAL_INT     
11      ;                       38          SYM_SEMICOLON   
12      whil                    0           KEYWD_WHILE     
12      (                       34          SYM_OP_PAR      
12      x                       69          IDENTIFIER      
12      <=                      48          SYM_LTEQ        
12      10                      64          LITERAL_INT     
12      )                       35          SYM_CL_PAR      
12      {                       32          SYM_OP_CURLY    
13      coll                    12          KEYWD_CALL      
13      write                   69          IDENTIFIER      
13      (                       34          SYM_OP_PAR      
13      x                       69          IDENTIFIER      
13      )                       35          SYM_CL_PAR      
13      ;                       38          SYM_SEMICOLON   
14      coll                    12          KEYWD_CALL      
14      write                   69          IDENTIFIER      
14      (                       34          SYM_OP_PAR      
14      coll                    12          KEYWD_CALL      
14      fact                    69          IDENTIFIER      
14      (                       34          SYM_OP_PAR      
14      x                       69          IDENTIFIER      
14      )                       35          SYM_CL_PAR      
14      )                       35          SYM_CL_PAR      
14      ;                       38          SYM_SEMICOLON   
15      coll                    12          KEYWD_CALL      
15      writeln                 69          IDENTIFIER      
15      (                       34          SYM_OP_PAR      
15      )                       35          SYM_CL_PAR      
15      ;                       38          SYM_SEMICOLON   
16      x                       69          IDENTIFIER      
16      =                       51          SYM_ASSIGN      
16      x                       69          IDENTIFIER      
16      +                       40          SYM_PLUS        
16      1                       64          LITERAL_INT     
16      ;                       38          SYM_SEMICOLON   
17      }                       33          SYM_CL_CURLY    
18      retun                   5           KEYWD_RETURN    
18      0                       64          LITERAL_INT     
18      ;                       38          SYM_SEMICOLON   
19      }                       33          SYM_CL_CURLY    
filepath: ./LexerTests/Test-2/input2.lwj
LINE    LEXEME                  TOKEN ID    TOKEN           

1       funkshun                10          KEYWD_FUNCTION  
1       array                   11          KEYWD_ARRAY     
1       <                       46          SYM_LT          
1       intijur                 6           KEYWD_INT       
1       >                       45          SYM_GT          
1       sort                    69          IDENTIFIER      
1       (                       34          SYM_OP_PAR      
1       array                   11          KEYWD_ARRAY     
1       <                       46          SYM_LT          
1       intijur                 6           KEYWD_INT       
1       >                       45          SYM_GT          
1       a                       69          IDENTIFIER      
1       ,                       39          SYM_COMMA       
1       intijur                 6           KEYWD_INT       
1       n                       69          IDENTIFIER      
1       )                       35          SYM_CL_PAR      
1       {                       32          SYM_OP_CURLY    
1       /                       43          SYM_SLASH       
1       /                       43          SYM_SLASH       
1       function                69          IDENTIFIER      
1       to                      69          IDENTIFIER      
1       sort                    69          IDENTIFIER      
2       intijur                 6           KEYWD_INT       
2       i                       69          IDENTIFIER      
2       ,                       39          SYM_COMMA       
2       j                       69          IDENTIFIER      
2       ;                       38          SYM_SEMICOLON   
3       let                     14          KEYWD_LET       
3       i                       69          IDENTIFIER      
3       =                       51          SYM_ASSIGN      
3       0                       64          LITERAL_INT     
3       ;                       38          SYM_SEMICOLON   
4       whil                    0           KEYWD_WHILE     
4       (                       34          SYM_OP_PAR      
4       i                       69          IDENTIFIER      
4       <                       46          SYM_LT          
4       n                       69          IDENTIFIER      
4       )                       35          SYM_CL_PAR      
4       {                       32          SYM_OP_CURLY    
4       /                       43          SYM_SLASH       
4       /                       43          SYM_SLASH       
4       outer                   69          IDENTIFIER      
4       loop                    69          IDENTIFIER      
5       j                       69          IDENTIFIER      
5       =                       51          SYM_ASSIGN      
5       i                       69          IDENTIFIER      
5       +                       40          SYM_PLUS        
5       1                       64          LITERAL_INT     
5       ;                       38          SYM_SEMICOLON   
6       intijur                 6           KEYWD_INT       
6       min                     69          IDENTIFIER      
6       ,                       39          SYM_COMMA       
6       pos                     69          IDENTIFIER      
6       =                       51          SYM_ASSIGN      
6       i                       69          IDENTIFIER      
6       ;                       38          SYM_SEMICOLON   
7       let                     14          KEYWD_LET       
7       min                     69          IDENTIFIER      
7       =                       51          SYM_ASSIGN      
7       a                       69          IDENTIFIER      
7       [                       36          SYM_OP_BRACK    
7       i                       69          IDENTIFIER      
7       ]                       37          SYM_CL_BRACK    
7       ;                       38          SYM_SEMICOLON   
8       whil                    0           KEYWD_WHILE     
8       (                       34          SYM_OP_PAR      
8       j                       69          IDENTIFIER      
8       <                       46          SYM_LT          
8       n                       69          IDENTIFIER      
8       )                       35          SYM_CL_PAR      
8       {                       32          SYM_OP_CURLY    
8       /                       43          SYM_SLASH       
8       /                       43          SYM_SLASH       
8       inner                   69          IDENTIFIER      
8       loop                    69          IDENTIFIER      
9       /                       43          SYM_SLASH       
9       *                       42          SYM_ASTERISK    
10      find                    69          IDENTIFIER      
10      smallest                69          IDENTIFIER      
10      element                 69          IDENTIFIER      
10      after                   69          IDENTIFIER      
10      position                69          IDENTIFIER      
10      i                       69          IDENTIFIER      
10      and                     69          IDENTIFIER      
10      swap                    69          IDENTIFIER      
10      it                      69          IDENTIFIER      
10      with                    69          IDENTIFIER      
10      position                69          IDENTIFIER      
10      i                       69          IDENTIFIER      
11      *                       42          SYM_ASTERISK    
11      /                       43          SYM_SLASH       
12      if                      1           KEYWD_IF        
12      (                       34          SYM_OP_PAR      
12      min                     69          IDENTIFIER      
12      >                       45          SYM_GT          
12      a                       69          IDENTIFIER      
12      [                       36          SYM_OP_BRACK    
12      j                       69          IDENTIFIER      
12      ]                       37          SYM_CL_BRACK    
12      )                       35          SYM_CL_PAR      
12      {                       32          SYM_OP_CURLY    
13      min                     69          IDENTIFIER      
13      =                       51          SYM_ASSIGN      
13      a                       69          IDENTIFIER      
13      [                       36          SYM_OP_BRACK    
13      j                       69          IDENTIFIER      
13      ]                       37          SYM_CL_BRACK    
13      ;                       38          SYM_SEMICOLON   
14      pos                     69          IDENTIFIER      
14      =                       51          SYM_ASSIGN      
14      j                       69          IDENTIFIER      
14      ;                       38          SYM_SEMICOLON   
15      }                       33          SYM_CL_CURLY    
16      j                       69          IDENTIFIER      
16      =                       51          SYM_ASSIGN      
16      j                       69          IDENTIFIER      
16      +                       40          SYM_PLUS        
16      1                       64          LITERAL_INT     
16      ;                       38          SYM_SEMICOLON   
17      }                       33          SYM_CL_CURLY    
18      intijur                 6           KEYWD_INT       
18      temp                    69          IDENTIFIER      
18      ;                       38          SYM_SEMICOLON   
19      let                     14          KEYWD_LET       
19      temp                    69          IDENTIFIER      
19      =                       51          SYM_ASSIGN      
19      a                       69          IDENTIFIER      
19      [                       36          SYM_OP_BRACK    
19      i                       69          IDENTIFIER      
19      ]                       37          SYM_CL_BRACK    
19      ;                       38          SYM_SEMICOLON   
20      a                       69          IDENTIFIER      
20      [                       36          SYM_OP_BRACK    
20      i                       69          IDENTIFIER      
20      ]                       37          SYM_CL_BRACK    
20      =                       51          SYM_ASSIGN      
20      a                       69          IDENTIFIER      
20      [                       36          SYM_OP_BRACK    
20      pos                     69          IDENTIFIER      
20      ]                       37          SYM_CL_BRACK    
20      ;                       38          SYM_SEMICOLON   
21      a                       69          IDENTIFIER      
21      [                       36          SYM_OP_BRACK    
21      pos                     69          IDENTIFIER      
21      ]                       37          SYM_CL_BRACK    
21      =                       51          SYM_ASSIGN      
21      temp                    69          IDENTIFIER      
21      ;                       38          SYM_SEMICOLON   
22      i                       69          IDENTIFIER      
22      +                       40          SYM_PLUS        
22      +                       40          SYM_PLUS        
22      ;                       38          SYM_SEMICOLON   
23      }                       33          SYM_CL_CURLY    
24      }                       33          SYM_CL_CURLY    
filepath: ./LexerTests/Test-3/input3.lwj
LINE    LEXEME                  TOKEN ID    TOKEN           

1       strin                   9           KEYWD_STRING    
1       distinction             69          IDENTIFIER      
1       ;                       38          SYM_SEMICOLON   
1       let                     14          KEYWD_LET       
1       distinction             69          IDENTIFIER      
1       =                       51          SYM_ASSIGN      
1       "you passed with flying colours"67          LITERAL_STRING  
1       ;                       38          SYM_SEMICOLON   
2       strin                   9           KEYWD_STRING    
2       firstclass              69          IDENTIFIER      
2       ;                       38          SYM_SEMICOLON   
2       let                     14          KEYWD_LET       
2       firstclass              69          IDENTIFIER      
2       =                       51          SYM_ASSIGN      
2       "you passed in first class"67          LITERAL_STRING  
2       ;                       38          SYM_SEMICOLON   
3       strin                   9           KEYWD_STRING    
3       fail                    69          IDENTIFIER      
3       ;                       38          SYM_SEMICOLON   
3       let                     14          KEYWD_LET       
3       litemax                 69          IDENTIFIER      
3       =                       51          SYM_ASSIGN      
3       "you failed"            67          LITERAL_STRING  
3       ;                       38          SYM_SEMICOLON   
5       /                       43          SYM_SLASH       
5       *                       42          SYM_ASTERISK    
6       program                 69          IDENTIFIER      
6       that                    69          IDENTIFIER      
6       gives                   69          IDENTIFIER      
6       result                  69          IDENTIFIER      
6       based                   69          IDENTIFIER      
6       on                      69          IDENTIFIER      
6       your                    69          IDENTIFIER      
6       cgpa                    69          IDENTIFIER      
7       *                       42          SYM_ASTERISK    
7       /                       43          SYM_SLASH       
9       flote                   7           KEYWD_FLOAT     
9       cgpa                    69          IDENTIFIER      
9       ;                       38          SYM_SEMICOLON   
9       let                     14          KEYWD_LET       
9       cpga                    69          IDENTIFIER      
9       =                       51          SYM_ASSIGN      
9       7.9                     65          LITERAL_FLOAT   
9       ;                       38          SYM_SEMICOLON   
10      if                      1           KEYWD_IF        
10      (                       34          SYM_OP_PAR      
10      cgpa                    69          IDENTIFIER      
10      >=                      47          SYM_GTEQ        
10      9.0                     65          LITERAL_FLOAT   
10      )                       35          SYM_CL_PAR      
10      {                       32          SYM_OP_CURLY    
11      coll                    12          KEYWD_CALL      
11      print                   69          IDENTIFIER      
11      (                       34          SYM_OP_PAR      
11      distinction             69          IDENTIFIER      
11      )                       35          SYM_CL_PAR      
11      ;                       38          SYM_SEMICOLON   
12      }                       33          SYM_CL_CURLY    
12      else                    2           KEYWD_ELSE      
12      {                       32          SYM_OP_CURLY    
13      if                      1           KEYWD_IF        
13      (                       34          SYM_OP_PAR      
13      cgpa                    69          IDENTIFIER      
13      >=                      47          SYM_GTEQ        
13      7                       64          LITERAL_INT     
13      )                       35          SYM_CL_PAR      
13      {                       32          SYM_OP_CURLY    
14      coll                    12          KEYWD_CALL      
14      print                   69          IDENTIFIER      
14      (                       34          SYM_OP_PAR      
14      firstclass              69          IDENTIFIER      
14      )                       35          SYM_CL_PAR      
14      ;                       38          SYM_SEMICOLON   
15      }                       33          SYM_CL_CURLY    
16      else                    2           KEYWD_ELSE      
16      {                       32          SYM_OP_CURLY    
16      coll                    12          KEYWD_CALL      
16      print                   69          IDENTIFIER      
16      (                       34          SYM_OP_PAR      
16      fail                    69          IDENTIFIER      
16      )                       35          SYM_CL_PAR      
16      ;                       38          SYM_SEMICOLON   
16      }                       33          SYM_CL_CURLY    
17      }                       33          SYM_CL_CURLY    
filepath: ./LexerTests/Test-4/input4.lwj
LINE    LEXEME                  TOKEN ID    TOKEN           

5       whil                    0           KEYWD_WHILE     
5       (                       34          SYM_OP_PAR      
5       (                       34          SYM_OP_PAR      
5       i                       69          IDENTIFIER      
5       &&                      53          SYM_AND         
5       j                       69          IDENTIFIER      
5       )                       35          SYM_CL_PAR      
5       ||                      52          SYM_OR          
5       k                       69          IDENTIFIER      
5       <=                      48          SYM_LTEQ        
5       3482.32e-4942           65          LITERAL_FLOAT   
5       )                       35          SYM_CL_PAR      
5       {                       32          SYM_OP_CURLY    
5       array                   11          KEYWD_ARRAY     
5       <                       46          SYM_LT          
5       strin                   9           KEYWD_STRING    
5       >                       45          SYM_GT          
5       arr                     69          IDENTIFIER      
5       ;                       38          SYM_SEMICOLON   
6       let                     14          KEYWD_LET       
6       arr                     69          IDENTIFIER      
6       =                       51          SYM_ASSIGN      
6       [                       36          SYM_OP_BRACK    
6       "hello\nworld"          67          LITERAL_STRING  
6       ,                       39          SYM_COMMA       
6       "compiler      construction"67          LITERAL_STRING  
6       ,                       39          SYM_COMMA       
6       "gah3#*hng   3)#~%A3&^A  G$ ag"67          LITERAL_STRING  
6       ]                       37          SYM_CL_BRACK    
6       ;                       38          SYM_SEMICOLON   
7       flote                   7           KEYWD_FLOAT     
7       f1                      69          IDENTIFIER      
7       ,                       39          SYM_COMMA       
7       f2                      69          IDENTIFIER      
7       ;                       38          SYM_SEMICOLON   
19      let                     14          KEYWD_LET       
19      f1                      69          IDENTIFIER      
19      =                       51          SYM_ASSIGN      
19      -                       41          SYM_MINUS       
19      5678.38E+21984          65          LITERAL_FLOAT   
19      ;                       38          SYM_SEMICOLON   
20      let                     14          KEYWD_LET       
20      f2                      69          IDENTIFIER      
20      =                       51          SYM_ASSIGN      
20      +                       40          SYM_PLUS        
20      2                       64          LITERAL_INT     
20      ;                       38          SYM_SEMICOLON   
21      bulen                   8           KEYWD_BOOL      
21      predict                 69          IDENTIFIER      
21      ;                       38          SYM_SEMICOLON   
21      let                     14          KEYWD_LET       
21      predict                 69          IDENTIFIER      
21      =                       51          SYM_ASSIGN      
21      stonks                  3           KEYWD_TRUE      
21      ;                       38          SYM_SEMICOLON   
22      if                      1           KEYWD_IF        
22      (                       34          SYM_OP_PAR      
22      f1                      69          IDENTIFIER      
22      *                       42          SYM_ASTERISK    
22      f2                      69          IDENTIFIER      
22      <=                      48          SYM_LTEQ        
22      0                       64          LITERAL_INT     
22      )                       35          SYM_CL_PAR      
22      {                       32          SYM_OP_CURLY    
22      let                     14          KEYWD_LET       
22      predict                 69          IDENTIFIER      
22      =                       51          SYM_ASSIGN      
22      not_stonks              4           KEYWD_FALSE     
22      ;                       38          SYM_SEMICOLON   
22      }                       33          SYM_CL_CURLY    
23      char                    15          KEYWD_CHAR      
23      newline                 69          IDENTIFIER      
23      ;                       38          SYM_SEMICOLON   
23      let                     14          KEYWD_LET       
23      newline                 69          IDENTIFIER      
23      =                       51          SYM_ASSIGN      
23      '\n'                    66          LITERAL_CHAR    
23      ;                       38          SYM_SEMICOLON   
24      }                       33          SYM_CL_CURLY    
26      funkshun                10          KEYWD_FUNCTION  
26      intijur                 6           KEYWD_INT       
26      mergesort               69          IDENTIFIER      
26      (                       34          SYM_OP_PAR      
26      array                   11          KEYWD_ARRAY     
26      <                       46          SYM_LT          
26      intijur                 6           KEYWD_INT       
26      >                       45          SYM_GT          
26      a                       69          IDENTIFIER      
26      ,                       39          SYM_COMMA       
26      intijur                 6           KEYWD_INT       
26      l                       69          IDENTIFIER      
26      ,                       39          SYM_COMMA       
26      intijur                 6           KEYWD_INT       
26      r                       69          IDENTIFIER      
26      )                       35          SYM_CL_PAR      
26      {                       32          SYM_OP_CURLY    
27      intijur                 6           KEYWD_INT       
27      m                       69          IDENTIFIER      
27      ;                       38          SYM_SEMICOLON   
27      let                     14          KEYWD_LET       
27      m                       69          IDENTIFIER      
27      =                       51          SYM_ASSIGN      
27      (                       34          SYM_OP_PAR      
27      l                       69          IDENTIFIER      
27      +                       40          SYM_PLUS        
27      r                       69          IDENTIFIER      
27      )                       35          SYM_CL_PAR      
27      /                       43          SYM_SLASH       
27      2                       64          LITERAL_INT     
27      ;                       38          SYM_SEMICOLON   
28      coll                    12          KEYWD_CALL      
28      mergesort               69          IDENTIFIER      
28      (                       34          SYM_OP_PAR      
28      a                       69          IDENTIFIER      
28      ,                       39          SYM_COMMA       
28      l                       69          IDENTIFIER      
28      ,                       39          SYM_COMMA       
28      m                       69          IDENTIFIER      
28      )                       35          SYM_CL_PAR      
28      ;                       38          SYM_SEMICOLON   
29      coll                    12          KEYWD_CALL      
29      mergesort               69          IDENTIFIER      
29      (                       34          SYM_OP_PAR      
29      a                       69          IDENTIFIER      
29      ,                       39          SYM_COMMA       
29      m                       69          IDENTIFIER      
29      +                       40          SYM_PLUS        
29      1                       64          LITERAL_INT     
29      ,                       39          SYM_COMMA       
29      r                       69          IDENTIFIER      
29      )                       35          SYM_CL_PAR      
29      ;                       38          SYM_SEMICOLON   
30      }                       33          SYM_CL_CURLY    
32      if                      1           KEYWD_IF        
32      (                       34          SYM_OP_PAR      
32      arr                     69          IDENTIFIER      
32      [                       36          SYM_OP_BRACK    
32      1                       64          LITERAL_INT     
32      ]                       37          SYM_CL_BRACK    
32      !=                      50          SYM_NOTEQ       
32      "compiler construction" 67          LITERAL_STRING  
32      )                       35          SYM_CL_PAR      
32      {                       32          SYM_OP_CURLY    
33      retun                   5           KEYWD_RETURN    
33      "hi"                    67          LITERAL_STRING  
33      ;                       38          SYM_SEMICOLON   
34      }                       33          SYM_CL_CURLY    
36      abc                     69          IDENTIFIER      
38      abc                     69          IDENTIFIER      
40      def                     69          IDENTIFIER      
42      whil                    0           KEYWD_WHILE     
42      if                      1           KEYWD_IF        
42      else                    2           KEYWD_ELSE      
42      stonks                  3           KEYWD_TRUE      
42      not_stonks              4           KEYWD_FALSE     
42      retun                   5           KEYWD_RETURN    
42      intijur                 6           KEYWD_INT       
42      flote                   7           KEYWD_FLOAT     
42      bulen                   8           KEYWD_BOOL      
42      strin                   9           KEYWD_STRING    
42      funkshun                10          KEYWD_FUNCTION  
42      array                   11          KEYWD_ARRAY     
42      coll                    12          KEYWD_CALL      
42      null                    13          KEYWD_NULL      
42      let                     14          KEYWD_LET       
42      char                    15          KEYWD_CHAR      
43      {                       32          SYM_OP_CURLY    
43      (                       34          SYM_OP_PAR      
43      [                       36          SYM_OP_BRACK    
43      )                       35          SYM_CL_PAR      
43      ]                       37          SYM_CL_BRACK    
43      ;                       38          SYM_SEMICOLON   
43      ,                       39          SYM_COMMA       
43      +                       40          SYM_PLUS        
43      -                       41          SYM_MINUS       
43      %                       44          SYM_PERC        
43      >                       45          SYM_GT          
43      <                       46          SYM_LT          
43      >=                      47          SYM_GTEQ        
43      ==                      49          SYM_ISEQ        
43      !=                      50          SYM_NOTEQ       
43      =                       51          SYM_ASSIGN      
43      ||                      52          SYM_OR          
43      &&                      53          SYM_AND         
43      }                       33          SYM_CL_CURLY    
44      -                       41          SYM_MINUS       
44      f11                     69          IDENTIFIER      
44      +                       40          SYM_PLUS        
44      af_j9f3                 69          IDENTIFIER      
44      !                       54          SYM_NOT         
44      variable                69          IDENTIFIER      
45      +                       40          SYM_PLUS        
45      35872                   64          LITERAL_INT     
45      -                       41          SYM_MINUS       
45      3183519                 64          LITERAL_INT     
45      214                     64          LITERAL_INT     
45      000214                  64          LITERAL_INT     
45      214000                  64          LITERAL_INT     
46      -                       41          SYM_MINUS       
46      3.5383                  65          LITERAL_FLOAT   
46      +                       40          SYM_PLUS        
46      000028532.0             65          LITERAL_FLOAT   
46      1424.24829e4218         65          LITERAL_FLOAT   
46      +                       40          SYM_PLUS        
46      1.04e-42                65          LITERAL_FLOAT   
46      -                       41          SYM_MINUS       
46      000.100                 65          LITERAL_FLOAT   
46      +                       40          SYM_PLUS        
46      E249                    69          IDENTIFIER      
48      a                       69          IDENTIFIER      
48      =                       51          SYM_ASSIGN      
50      3                       64          LITERAL_INT     
50      ;                       38          SYM_SEMICOLON   
52      array                   11          KEYWD_ARRAY     
52      <                       46          SYM_LT          
52      intijur                 6           KEYWD_INT       
52      >                       45          SYM_GT          
52      a                       69          IDENTIFIER      
52      =                       51          SYM_ASSIGN      
52      [                       36          SYM_OP_BRACK    
52      "hello"                 67          LITERAL_STRING  
52      ,                       39          SYM_COMMA       
52      213                     64          LITERAL_INT     
52      ,                       39          SYM_COMMA       
52      not_stonks              4           KEYWD_FALSE     
52      ,                       39          SYM_COMMA       
52      1.0E-6                  65          LITERAL_FLOAT   
52      ,                       39          SYM_COMMA       
52      '.'                     66          LITERAL_CHAR    
52      ,                       39          SYM_COMMA       
52      "newline\n"             67          LITERAL_STRING  
52      ,                       39          SYM_COMMA       
52      "'"                     67          LITERAL_STRING  
52      ,                       39          SYM_COMMA       
52      '"'                     66          LITERAL_CHAR    
52      ]                       37          SYM_CL_BRACK    
52      ;                       38          SYM_SEMICOLON   
filepath: ./LexerTests/Test-5/input5.lwj
LINE    LEXEME                  TOKEN ID    TOKEN           

